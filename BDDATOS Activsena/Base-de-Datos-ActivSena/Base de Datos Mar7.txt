-- CREAR BASE DE DATOS Y USARLA


DROP DATABASE BaseDeDatosMar7;

CREATE DATABASE BaseDeDatosMar7;

USE BaseDeDatosMar7; 

-- Normalizacion de los nombres de las tabla y de los campos.




-- TABLA: TablaRoles 
CREATE TABLE
  TablaRoles (
    IdRoles VARCHAR(50) NOT NULL,
    NombreRol VARCHAR(25) NOT NULL,
    CONSTRAINT PK_IdRoles PRIMARY KEY (IdRoles) 
  );


-- TABLA: TablaGestionE
CREATE TABLE
  TablaGestionE (
    IdGestionE VARCHAR(50) NOT NULL,
    Aprobar TEXT NOT NULL,
    CONSTRAINT Pk_IdGestionE PRIMARY KEY (IdGestionE)
  );

-- TABLA: TablaUsuarios
CREATE TABLE
  TablaUsuarios (
    IdentificacionUsuario VARCHAR(50) NOT NULL,
    Nombre VARCHAR(100) NOT NULL,
    Apellido VARCHAR(100) NOT NULL,
    Correo VARCHAR(255) NOT NULL UNIQUE,
    Telefono BIGINT,
    Contrase√±a VARCHAR(255) NOT NULL,
    FechaRegistro DATE NOT NULL,
    IdRoles VARCHAR(50) NOT NULL,
    CONSTRAINT Pk_Identificacion PRIMARY KEY (IdentificacionUsuario),
    CONSTRAINT Fk_IdRoles FOREIGN KEY (IdRoles) REFERENCES TablaRoles (IdRoles) ON DELETE CASCADE ON UPDATE CASCADE -- Hacer en todas la llaves foraneas
  );
  
  
  

CREATE TABLE TablaAlquilerElementos (
     IdAlquiler CHAR(10) NOT NULL,
     NombreElemento VARCHAR(50) NOT NULL,
    FechaSolicitud DATETIME NOT NULL,
    FechaDevolucion DATETIME NOT NULL,
    RegistradoPor varchar(50) not null,
    Observaciones TEXT NULL,
    IdentificacionUsuario VARCHAR(50) NOT NULL,
    CONSTRAINT Pk_id_alquiler PRIMARY KEY (IdAlquiler),
    CONSTRAINT Fk_IdentificacionAlqEl FOREIGN KEY (IdentificacionUsuario) REFERENCES TablaUsuarios(IdentificacionUsuario)
);

-- TABLA: TablaPlanificacionE
CREATE TABLE
  TablaPlanificacionE (
    IdPlanificarE VARCHAR(50) NOT NULL,
    NombreEvento VARCHAR(150) NOT NULL,
    FechaEvento DATETIME NOT NULL,
    LugarDeEvento VARCHAR(50) NOT NULL,
    Recursos TEXT,
    IdEventos VARCHAR(50) NOT NULL,
    IdGestionE VARCHAR(50) NOT NULL,
    CONSTRAINT Pk_IdPlanificarE PRIMARY KEY (IdPlanificarE),
    CONSTRAINT Fk_IdGestionE FOREIGN KEY (IdGestionE) REFERENCES TablaGestionE (IdGestionE)
  );
  
-- TABLA: TablaEventos
CREATE TABLE 
  TablaEventos (
    IdEventos VARCHAR(50) NOT NULL,
    NombreEvento VARCHAR(255) NOT NULL,
    FechaInicio DATE NOT NULL,
    FechaFin DATE NOT NULL,
    HoraFin TIME NOT NULL, 
    HoraInicio TIME NOT NULL, 
    UbicacionEvento VARCHAR(255) NOT NULL,
    IdPlanificarE VARCHAR(50) NOT NULL,
    DescripcionEvento TEXT,
    CONSTRAINT Pk_IdEventos PRIMARY KEY (IdEventos),
    CONSTRAINT Fk_PlanificacionEv FOREIGN KEY (IdPlanificarE) REFERENCES tablaplanificacione(IdPlanificarE)
  );



  -- TABLA: TablaActividades
CREATE TABLE
  TablaActividades (
    IdActividades VARCHAR(50) NOT NULL,
    NombreActi VARCHAR(150) NOT NULL,
	FechaInicio DATE NOT NULL,
    FechaFin DATE NOT NULL,
    HoraFin TIME NOT NULL, 
    HoraInicio TIME NOT NULL, 
    TipoLudica VARCHAR(50) NOT NULL,
    Descripcion TEXT,
    IdEventos VARCHAR(50),
    CONSTRAINT Pk_IdActividades PRIMARY KEY (IdActividades),
    CONSTRAINT Fk_IdEventosA FOREIGN KEY (IdEventos) REFERENCES TablaEventos (IdEventos)
  ); 


-- TABLA: TablaAsistencia
CREATE TABLE
  TablaAsistencia (
    AsiId CHAR(10) NOT NULL,
    AsiFecha DATE,
    AsiHorasAsistidas INT,
    QREntrada VARCHAR(100) NOT NULL,
    QRSalida VARCHAR(100) NOT NULL,
    IdentificacionUsuario VARCHAR(50) NOT NULL,
    IdActividades VARCHAR(50) NOT NULL,
    CONSTRAINT Pk_AsiId PRIMARY KEY (AsiId),
    CONSTRAINT Fk_Identificacion FOREIGN KEY (IdentificacionUsuario) REFERENCES TablaUsuarios (IdentificacionUsuario),
    CONSTRAINT Fk_TablaActividadesAsis FOREIGN KEY (IdActividades) REFERENCES TablaActividades(IdActividades)
  );

-- TABLA: TablaCertificado
CREATE TABLE
  TablaConstancia (
    ConstanciaId CHAR(12) NOT NULL,
    ConstanciaHorasCert INT,
    ConstanciaEstado VARCHAR(50) NOT NULL,
    ConstanciaFecha DATETIME,
    IdentificacionUsuario VARCHAR(50) NOT NULL,
    CONSTRAINT Pk_ConstanciaId PRIMARY KEY (ConstanciaId),
    CONSTRAINT Fk_IdentificacionU FOREIGN KEY (IdentificacionUsuario) REFERENCES TablaUsuarios (IdentificacionUsuario)
  );

-- TABLA: TablaConsultaIA
CREATE TABLE
  TablaConsultaIA (
    IdConsultaIa VARCHAR(50) NOT NULL,
    Pregunta TEXT NOT NULL,
    Respuesta TEXT NOT NULL,
    Fecha DATE NOT NULL,
    Descripcion TEXT,
    IdentificacionUsuario VARCHAR(50) NOT NULL,
    CONSTRAINT Pk_IdConsultaIa PRIMARY KEY (IdConsultaIa),
    CONSTRAINT Fk_IdentificacionA FOREIGN KEY (IdentificacionUsuario) REFERENCES TablaUsuarios (IdentificacionUsuario)
  );

-- TABLA: TablaNotificaciones
CREATE TABLE
  TablaNotificaciones (
    IdNotificaciones VARCHAR(50) NOT NULL,
    Mensaje TEXT NOT NULL,
    TiposNotificaciones INT,
    FechaDeEnvio DATE NOT NULL,
    IdEventos VARCHAR(50) NOT NULL,
    CONSTRAINT Pk_IdNotificaciones PRIMARY KEY (IdNotificaciones),
    CONSTRAINT Fk_IdEventos FOREIGN KEY (IdEventos) REFERENCES TablaEventos (IdEventos)
  );


-- TABLA: TablaFeedback
CREATE TABLE 
  TablaFeedback (
    IdFeedback VARCHAR(50) NOT NULL,
    ComentarioFeedback TEXT NOT NULL,
    FechaEnvio TIMESTAMP,
    CONSTRAINT Pk_IdFeedback PRIMARY KEY (IdFeedback)
  );






-- TABLA: RelUsuariosFeedback 
CREATE TABLE
  RelUsuariosFeedback (
    IdentificacionUsuario VARCHAR(50) NOT NULL,
    IdFeedback VARCHAR(50) NOT NULL,
    CONSTRAINT Fk_IdentificacionO FOREIGN KEY (IdentificacionUsuario) REFERENCES TablaUsuarios (IdentificacionUsuario),
    CONSTRAINT Fk_IdFeedback FOREIGN KEY (IdFeedback) REFERENCES TablaFeedback (IdFeedback)
  );

-- TABLA: RelUsuario_Eventos
CREATE TABLE
  RelUsuarioEventos (
    IdentificacionUsuario VARCHAR(50) NOT NULL,
    IdEventos VARCHAR(50) NOT NULL,
    CONSTRAINT Fk_Identificacione FOREIGN KEY (IdentificacionUsuario) REFERENCES TablaUsuarios (IdentificacionUsuario),
    CONSTRAINT Fk_IdEventosoo FOREIGN KEY (IdEventos) REFERENCES TablaEventos (IdEventos)
  );